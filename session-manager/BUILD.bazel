load("index.bzl", "workdir", "dist_files", "to_sub_files")
load("@bazel_skylib//rules:select_file.bzl", "select_file")

package(default_visibility = ["//visibility:public"])

genrule(
    name = "release_dockerfile",
    srcs = [
        "@session_manager_repo//:Dockerfile",
    ],
    outs = [
        "Dockerfile"
    ],
    cmd = 'cp $(SRCS) $@ && echo "\nADD . .\nRUN make release" >> $@'
)

genrule(
    name = "image",
    srcs = [
        "@session_manager_repo//:src",
        "@session_manager_repo//:all_srcs",
        "@multitool//tools/docker",
        "release_dockerfile"
    ],
    outs = [
        "image_id.txt"
    ],
    cmd = " && ".join([
        "$(location @multitool//tools/docker) build $(location @session_manager_repo//:src)/../ -f $$(readlink -f $(location release_dockerfile)) -q &> $@".format(workdir)
    ])
)

dist_name = "dist"

outs = [dist_name + "/" + f for f in dist_files().values()]

copy_commands = ["$(location @multitool//tools/docker) cp $$cid:/{workdir}/bin/{f} $(RULEDIR)/{dist_name}/{f}".format(workdir = workdir, f=f, dist_name = dist_name) for f in dist_files().values()]

genrule(
    name = dist_name,
    srcs = [
        "image",
        "@multitool//tools/docker"
    ],
    outs = outs,
    cmd = " && ".join([
        "cid=$$($(location @multitool//tools/docker) create $$(cat $(location image)))"
    ] + copy_commands + [
        "$(location @multitool//tools/docker) rm $$cid"
    ])
)

select_file(
    name = "bin",
    srcs = dist_name,
    subpath = select(to_sub_files(dist_name + "/"))
)


