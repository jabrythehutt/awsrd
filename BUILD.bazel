load("@aspect_bazel_lib//lib:copy_to_bin.bzl", "copy_to_bin")
load("@aspect_rules_js//js:defs.bzl", "js_library")
load("@aspect_rules_js//npm:defs.bzl", "stamped_package_json")
load("@aspect_rules_ts//ts:defs.bzl", "ts_config")
load("@npm//:defs.bzl", "npm_link_all_packages")
load("@npm//:eslint/package_json.bzl", eslint_bin = "bin")
load("@npm//:tsconfig-to-swcconfig/package_json.bzl", swcrc_bin = "bin")
load("platforms.bzl", "platforms")

package(default_visibility = ["//visibility:public"])

platforms()

npm_link_all_packages(
    name = "node_modules",
)

ts_config(
    name = "tsconfig",
    src = "tsconfig.json",
    visibility = ["//visibility:public"],
)

stamped_package_json(
    name = "package",
    stamp_var = "STABLE_GIT_VERSION",
)

copy_to_bin(
    name = "jest_config",
    srcs = [
        "jest.config.mjs",
    ],
)

copy_to_bin(
    name = "extension_assets",
    srcs = [
        ".vscodeignore",
        "LICENSE.txt",
        "README.md",
    ],
)

swcrc_bin.tsconfig_to_swcconfig(
    name = "swcrc",
    srcs = [
        "tsconfig",
    ],
    outs = [
        ".swcrc",
    ],
    args = [
        "-o",
        ".swcrc",
    ],
)

alias(
    name = "format",
    actual = "//tools/format",
)

js_library(
    name = "eslint_config",
    srcs = ["eslint.config.mjs"],
    deps = [
        ":node_modules/@eslint/js",
        ":node_modules/typescript-eslint",
    ],
)

eslint_bin.eslint_binary(name = "eslint")
