load("@npm//:defs.bzl", "npm_link_all_packages")
load("@aspect_rules_ts//ts:defs.bzl", "ts_project")
load("index.bzl", "cjs_bundle")
load("@aspect_rules_js//npm:defs.bzl", "npm_package")
load("session_manager.bzl", "session_manager")

npm_link_all_packages(
    name = "node_modules",
)

ts_project(
    name = "lib",
    srcs = glob(["*.ts"]) + ["package.json"],
    resolve_json_module = True,
    deps = [
        "//:node_modules/@aws-sdk/client-ec2",
        "//:node_modules/@aws-sdk/client-ec2-instance-connect",
        "//:node_modules/@aws-sdk/client-ssm",
        "//:node_modules/@aws-sdk/credential-providers",
        "//:node_modules/@aws-sdk/shared-ini-file-loader",
        "//:node_modules/@aws-sdk/smithy-client",
        "//:node_modules/@aws-sdk/types",
        "//:node_modules/@types/lodash",
        "//:node_modules/@types/node",
        "//:node_modules/@types/sshpk",
        "//:node_modules/@types/vscode",
        "//:node_modules/@types/yargs",
        "//:node_modules/aws-cdk-lib",
        "//:node_modules/cdk-monitoring-constructs",
        "//:node_modules/constructs",
        "//:node_modules/lodash",
        "//:node_modules/rxjs",
        "//:node_modules/sshpk",
        "//:node_modules/tslib",
        "//:node_modules/yargs",
    ],
)

entry_base = "ssmProxyScript"

proxy_script_file_name = entry_base + ".cjs"

sourcemap = None

minify = True

cjs_bundle(
    name = "ssm_proxy_script",
    entry_point = entry_base + ".js",
    minify = minify,
    output = proxy_script_file_name,
    sourcemap = sourcemap,
    deps = [
        "lib",
    ],
)

session_manager_bin_name = "session_manager_bin"

session_manager(
    name = session_manager_bin_name,
)

cjs_bundle(
    name = "cdk_app",
    entry_point = "app.js",
    minify = minify,
    output = "app.cjs",
    sourcemap = sourcemap,
    deps = [
        "lib",
    ],
)

cjs_bundle(
    name = "extension",
    define = {
        "process.env.PROXY_SCRIPT_FILENAME": '"{proxy_script_file_name}"'.format(proxy_script_file_name = proxy_script_file_name),
        "process.env.SESSION_MANAGER_BIN": '"{session_manager_bin_name}"'.format(session_manager_bin_name = session_manager_bin_name),
    },
    entry_point = "extension.js",
    external_libs = ["vscode"],
    minify = minify,
    output = "extension.cjs",
    sourcemap = sourcemap,
    deps = [
        "cdk_app",
        "lib",
        "ssm_proxy_script",
    ],
)

npm_package(
    name = "dist",
    srcs = [
        "cdk_app",
        "package.json",
        "extension",
        "ssm_proxy_script",
        "//:node_modules/aws-cdk/dir",
        session_manager_bin_name,
    ] + glob(["media/*.*"]),
    exclude_srcs_patterns = [],
)
